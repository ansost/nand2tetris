class MathGame {
    //type Class name;
    static ScreenStatus screenStatus;
    //field Equation equation;
    static MathGame instance;
    field int score;
    field boolean exit;
    field Smiley smiley;

    /** Constructs a new Dr. Mastracchio game. */
    constructor MathGame new() {
        var boolean crown;
        let crown=false;
	    do Screen.clearScreen();
        do Output.moveCursor(7,16); //row, col
        do Output.printString("DR. MASTRACCHIOS GEHIRNJOGGING");
        do Output.moveCursor(9,16); //row, col
        do Output.printString("Willkommen"); //TODO: make it blink
        do Output.moveCursor(20,16);
        do Output.printString("Press [SPACE] to continue");

        do smiley.happy(crown);
        
	    let exit = false;
	    let score = 0;
        return this;
    }

    /** Returns this Pong game. */
    function MathGame getInstance() {
        return instance;
    }

    /** Creates an instance of a Pong game. */
    function void newInstance() {
        let instance = MathGame.new();
        return;
    }

    method void run() {
        var char key;
        //Check if game has been started (space has been pressed).
        while (~(key = 32)) {
            let key = Keyboard.keyPressed();
            do Sys.wait(50);
        }
        do Screen.clearScreen();

        do smiley.angry();
        
        //Show explanation screen.
        // do screenStatus.explanation();
        // while (~(key = 32)) {
        //     let key = Keyboard.keyPressed();
        //     do Sys.wait(50);
        // }
        // do Screen.clearScreen();
        
        //Show equation.
        //do screenStatus.equation();
        return;

    }

    // Check input
    // method
    // let length = Keyboard.readInt("How many numbers? ");
    //   let a = Array.new(length); // constructs the array
     
    //   let i = 0;
    //   while (i < length) {
    //      let a[i] = Keyboard.readInt("Enter a number: ");
    //      let sum = sum + a[i];
    //      let i = i + 1;
    //   }

    /** Deallocates the object's memory. */
    // method void dispose() {
    //     do bat.dispose();
	//     do ball.dispose();
    //     do Memory.deAlloc(this);
    //     return;
    // }
}